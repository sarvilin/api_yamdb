# версия docker-compose
version: '3.2'

services:
  db:
    image: postgres:13.0-alpine
    volumes:        # volume и связанная с ним директория в контейнере
      - /var/lib/postgresql/data/
#      - postgres_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env
  web:
    build: .
    restart: always
    volumes:
      # Контейнер web будет работать с данными, хранящиеся в томе static_value,
      # через свою директорию /app/static/
      - static_value:/app/static/
      # Данные, хранящиеся в томе media_value, будут доступны в контейнере web
      # через директорию /app/media/
      - media_value:/app/media/
#    ports:
#     - "8000:8000"
    depends_on:      # "зависит от",
      - db
    env_file:
      - ./.env

# Новый контейнер
  nginx:
    # образ, из которого должен быть запущен контейнер
    image: nginx:1.21.3-alpine

    # запросы с внешнего порта 80 перенаправляем на внутренний порт 80
    ports:
      - "80:80"

    volumes:
      # При сборке скопировать созданный конфиг nginx из исходной директории
      # в контейнер и сохранить его в директорию /etc/nginx/conf.d/
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

      # Контейнер nginx будет работать с данными, хранящиеся в томе static_value,
      # через свою директорию /var/html/static/
      - static_value:/var/html/static/

      # Данные, хранящиеся в томе media_value, будут доступны в контейнере nginx
      # через директорию /var/html/media/
      - media_value:/var/html/media/

    depends_on:
      # Контейнер nginx должен быть запущен после контейнера web
      - web

volumes:
  # Новые тома
  static_value:
  media_value:
#  postgres_volume: